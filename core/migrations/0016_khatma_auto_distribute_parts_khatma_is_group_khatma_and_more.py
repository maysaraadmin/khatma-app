'''"""This module contains Module functionality."""'''
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

class Migration(migrations.Migration):
    '''"""Class representing Migration."""'''
    dependencies = [('core', '0015_quranreciter_alter_khatmachat_options_and_more'), migrations.swappable_dependency(settings.AUTH_USER_MODEL)]
    operations = [migrations.AddField(model_name='khatma', name='auto_distribute_parts', field=models.BooleanField(default=True, verbose_name='توزيع الأجزاء تلقائياً')), migrations.AddField(model_name='khatma', name='is_group_khatma', field=models.BooleanField(default=False, verbose_name='ختمة جماعية')), migrations.AlterField(model_name='khatma', name='khatma_type', field=models.CharField(choices=[('regular', 'ختمة عادية'), ('memorial', 'ختمة للمتوفى'), ('charity', 'ختمة خيرية'), ('birth', 'ختمة مولود'), ('healing', 'ختمة شفاء'), ('graduation', 'ختمة تخرج'), ('wedding', 'ختمة زواج'), ('group', 'ختمة جماعية')], default='regular', max_length=20, verbose_name='نوع الختمة')), migrations.AlterField(model_name='khatma', name='visibility', field=models.CharField(choices=[('public', 'عامة - متاحة للجميع'), ('private', 'خاصة - بدعوة فقط'), ('family', 'عائلية - للعائلة فقط'), ('group', 'مجموعة - لأعضاء المجموعة فقط')], default='public', max_length=20, verbose_name='خصوصية الختمة')), migrations.CreateModel(name='GroupMembership', fields=[('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('role', models.CharField(choices=[('admin', 'مدير'), ('moderator', 'مشرف'), ('member', 'عضو')], default='member', max_length=20, verbose_name='الدور')), ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الانضمام')), ('is_active', models.BooleanField(default=True, verbose_name='نشط')), ('status', models.CharField(choices=[('invited', 'مدعو'), ('joined', 'منضم'), ('left', 'غادر'), ('removed', 'تمت إزالته')], default='joined', max_length=20, verbose_name='الحالة')), ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم'))], options={'verbose_name': 'عضوية المجموعة', 'verbose_name_plural': 'عضويات المجموعات'}), migrations.CreateModel(name='ReadingGroup', fields=[('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), ('name', models.CharField(max_length=200, verbose_name='اسم المجموعة')), ('description', models.TextField(blank=True, null=True, verbose_name='وصف المجموعة')), ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')), ('is_active', models.BooleanField(default=True, verbose_name='نشطة')), ('image', models.ImageField(blank=True, null=True, upload_to='group_images/', verbose_name='صورة المجموعة')), ('privacy', models.CharField(choices=[('public', 'عامة - يمكن لأي شخص الانضمام'), ('private', 'خاصة - بدعوة فقط'), ('closed', 'مغلقة - لا يمكن الانضمام')], default='public', max_length=20, verbose_name='خصوصية المجموعة')), ('group_type', models.CharField(choices=[('general', 'مجموعة عامة'), ('family', 'مجموعة عائلية'), ('friends', 'مجموعة أصدقاء'), ('organization', 'مجموعة مؤسسة'), ('school', 'مجموعة مدرسة'), ('mosque', 'مجموعة مسجد')], default='general', max_length=20, verbose_name='نوع المجموعة')), ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL, verbose_name='منشئ المجموعة')), ('members', models.ManyToManyField(related_name='joined_groups', through='core.GroupMembership', to=settings.AUTH_USER_MODEL, verbose_name='أعضاء المجموعة'))]), migrations.AddField(model_name='groupmembership', name='group', field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.readinggroup', verbose_name='المجموعة')), migrations.AddField(model_name='khatma', name='group', field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='khatmas', to='core.readinggroup', verbose_name='المجموعة')), migrations.AlterUniqueTogether(name='groupmembership', unique_together={('user', 'group')})]
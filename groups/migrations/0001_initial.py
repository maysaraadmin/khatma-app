# Generated by Django 5.2 on 2025-05-08 14:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'عضو'), ('moderator', 'مشرف'), ('admin', 'مدير')], default='member', max_length=20, verbose_name='الدور')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الانضمام')),
            ],
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True, verbose_name='رسالة')),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('approved', 'تمت الموافقة'), ('rejected', 'تم الرفض')], default='pending', max_length=20, verbose_name='الحالة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الطلب')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ المعالجة')),
            ],
        ),
        migrations.CreateModel(
            name='ReadingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='اسم المجموعة')),
                ('description', models.TextField(blank=True, null=True, verbose_name='وصف المجموعة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشطة')),
                ('image', models.ImageField(blank=True, null=True, upload_to='group_images/', verbose_name='صورة المجموعة')),
                ('is_public', models.BooleanField(default=True, verbose_name='مجموعة عامة')),
                ('allow_join_requests', models.BooleanField(default=True, verbose_name='السماح بطلبات الانضمام')),
                ('max_members', models.IntegerField(default=0, verbose_name='الحد الأقصى للأعضاء (0 = غير محدود)')),
                ('enable_chat', models.BooleanField(default=True, verbose_name='تفعيل المحادثة')),
                ('enable_khatma_creation', models.BooleanField(default=True, verbose_name='السماح بإنشاء ختمات')),
            ],
        ),
        migrations.CreateModel(
            name='GroupAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='مثبت')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المنشئ')),
            ],
            options={
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='الرسالة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإرسال')),
                ('is_system_message', models.BooleanField(default=False, verbose_name='رسالة نظام')),
                ('has_attachment', models.BooleanField(default=False, verbose_name='يحتوي على مرفق')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='group_chat_attachments/', verbose_name='المرفق')),
                ('attachment_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='نوع المرفق')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المرسل')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='العنوان')),
                ('description', models.TextField(blank=True, null=True, verbose_name='الوصف')),
                ('event_type', models.CharField(choices=[('meeting', 'اجتماع'), ('khatma_start', 'بدء ختمة'), ('khatma_completion', 'إكمال ختمة'), ('lecture', 'محاضرة'), ('other', 'أخرى')], default='meeting', max_length=20, verbose_name='نوع الحدث')),
                ('start_time', models.DateTimeField(verbose_name='وقت البدء')),
                ('end_time', models.DateTimeField(verbose_name='وقت الانتهاء')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='المكان')),
                ('is_online', models.BooleanField(default=False, verbose_name='عبر الإنترنت')),
                ('meeting_link', models.URLField(blank=True, null=True, verbose_name='رابط الاجتماع')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المنشئ')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
    ]
